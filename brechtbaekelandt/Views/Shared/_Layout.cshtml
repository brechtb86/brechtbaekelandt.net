@using brechtbaekelandt.Models
@{
    var activePage = (string)this.ViewData["ActivePage"];
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@this.ViewData["Title"] - brecht|baekelandt</title>

    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">

    <meta name="copyright" content="www.brechtbaekelandt.net falls under GNU General Public License version 3" />


    @{
        if (this.ViewData["DisableGA"] == null || !bool.Parse(this.ViewData["DisableGA"].ToString()))
        {
            <!-- Global site tag (gtag.js) - Google Analytics -->
            <script async src="//www.googletagmanager.com/gtag/js?id=UA-114039978-1"></script>
            <script>
                window.dataLayer = window.dataLayer || [];
                function gtag() { dataLayer.push(arguments); }
                gtag('js', new Date());

                gtag('config', 'UA-114039978-1');
            </script>
        }
    }

    @RenderSection("seo", required: false)


    @RenderSection("social", required: false)

    <link rel="apple-touch-icon" sizes="57x57" href="/images/favicon/apple-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="60x60" href="/images/favicon/apple-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/images/favicon/apple-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="/images/favicon/apple-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/images/favicon/apple-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="/images/favicon/apple-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/images/favicon/apple-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="/images/favicon/apple-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/images/favicon/apple-icon-180x180.png">
    <link rel="icon" type="image/png" sizes="192x192" href="/images/favicon/android-icon-192x192.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="/images/favicon/favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/images/favicon/favicon-16x16.png">
    <link rel="manifest" href="/images/favicon/manifest.json">
    <meta name="msapplication-TileColor" content="##540804">
    <meta name="msapplication-TileImage" content="/ms-icon-144x144.png">
    <meta name="theme-color" content="##540804">




    <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js"></script>
    <script type="text/javascript">
        WebFont.load({
            google: {
                families: ["Lato", "Varela Round", "Open Sans"]
            }
        });
    </script>

    <link href="//use.fontawesome.com/releases/v5.4.1/css/all.css" integrity="sha384-5sAR7xN1Nv6T6+dT2mhtzEpVJvfS3NScPQTrOxhwjIuvcA67KV2R5Jz6kr4abQsz" rel="stylesheet" type="text/css" crossorigin="anonymous">

    <link href="//fonts.googleapis.com/css?family=Lato" rel="stylesheet" type="text/css">
    <link href="//fonts.googleapis.com/css?family=Varela+Round" rel="stylesheet" type="text/css">
    <link href="//fonts.googleapis.com/css?family=Open+Sans:400,400italic,600,600italic" rel="stylesheet" type="text/css">

    <environment include="Development">
        <link href="~/css/bootstrap/bootstrap-custom.css" rel="stylesheet" asp-append-version="true" />
        <link href="~/css/site.css" rel="stylesheet" asp-append-version="true" />
    </environment>
    <environment exclude="Development">
        <link href="~/css/site.min.css" rel="stylesheet" asp-append-version="true" />
    </environment>

    @RenderSection("styles", required: false)

    <script type="text/javascript" src="~/lib/jquery/dist/jquery.js"></script>
    <script type="text/javascript" src="~/lib/jquery.cookie/jquery.cookie.js"></script>
    <script type="text/javascript" src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script type="text/javascript" src="~/lib/knockout/dist/knockout.js"></script>
    <script type="text/javascript" src="~/lib/knockout-mapping/knockout.mapping.js"></script>
    <script type="text/javascript" src="~/lib/moment/moment.js"></script>

    <environment include="Development">
        <script type="text/javascript" src="~/js/knockout/knockout.extenders.js"></script>
        <script type="text/javascript" src="~/js/knockout/knockout.extensions.js"></script>
        <script type="text/javascript" src="~/js/knockout/knockout.validation-custom.js"></script>
        <script type="text/javascript" src="~/js/knockout/knockout.validation-rules.js"></script>
        <script type="text/javascript" src="~/js/base.js" asp-append-version="true"></script>
        <script type="text/javascript" src="~/js/helpers/helpers.js" asp-append-version="true"></script>
    </environment>

    <environment exclude="Development">
        <script type="text/javascript" src="/js/site.min.js" asp-append-version="true"></script>
    </environment>

    <script type="text/javascript">
        $.ajaxSetup({
            cache: false
        });
    </script>

    <script type="text/javascript">
        var knockoutValidationSettings = {
            insertMessages: false,
            insertMessagesAfterValidationElement: true,
            //insertMessages: false,
            //insertMessagesAfterValidationElement: false,
            decorateInputElement: false,
            decorateElementOnModified: true,
            errorMessageClass: 'validation-message',
            errorElementClass: 'has-error',
            //errorClass: 'error',
            elementClass: 'form-group',
            errorsAsTitle: false,
            parseInputAttributes: false,
            messagesOnModified: true,
            messageTemplate: "validationMessageTemplate",
            grouping: { deep: true, observable: true },
            registerExtenders: true
        };

        ko.validation.init(knockoutValidationSettings, true);
    </script>
    @RenderSection("scripts", required: false)
</head>
<body>
    <header>
        <div id="header-content" class="container">
            <div id="title">
                <h1>brecht|baekelandt</h1>
                <h2>.net developer</h2>
            </div>
        </div>
    </header>
    <div id="main" class="container">
        <nav class="navbar navbar-default">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li class="@(activePage == "home" ? "active" : "" )"><a asp-area="" asp-controller="Home" asp-action="Index">home</a></li>
                    <li class="@(activePage == "archive" ? "active" : "" )"><a asp-area="" asp-controller="Blog" asp-action="Archive">archive</a></li>
                    <li><a href="https://www.brechtbaekelandt.net/tools">tools</a></li>
                    <li class="@(activePage == "about" ? "active" : "" )"><a asp-area="" asp-controller="About" asp-action="Index">about</a></li>

                    @if (this.User.Identity.IsAuthenticated)
                    {
                        <li class="@(activePage == "admin" ? "active" : "" )"><a asp-area="" asp-controller="Admin" asp-action="Index">admin</a></li>
                    }
                </ul>
                @if (this.User.Identity.IsAuthenticated)
                {
                    var firstName = string.Empty;
                    var lastName = string.Empty;

                    var currentUser = this.ViewData["CurrentUser"];

                    if (currentUser is ApplicationUser currentApplicationUser)
                    {
                        firstName = currentApplicationUser.FirstName;
                        lastName = currentApplicationUser.LastName;
                    }

                    <ul class="nav navbar-nav navbar-right">
                        <li>
                            <span class="navbar-text">@($"hello {firstName} {lastName}")</span>
                        </li>
                        <li>
                            <form class="navbar-form" method="POST" asp-controller="account" asp-action="signout">
                                <button type="submit" class="btn btn-sm btn-default"><i class="fas fa-sign-out-alt"></i> sign out</button>
                            </form>
                        </li>
                    </ul>
                }
                else
                {
                    <ul class="nav navbar-nav navbar-right">
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">sign in <span class="caret"></span></a>
                            <ul class="dropdown-menu">
                                <li class="sign-in-dropdown">
                                    <form method="POST" asp-controller="account" asp-action="signin">
                                        <div class="form-group">
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="far fa-user"></i></span>
                                                <input name="username" type="text" placeholder="username or email" class="form-control" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fas fa-unlock-alt"></i></span>
                                                <input name="password" type="password" placeholder="password" class="form-control" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label>
                                                <label class="switch">
                                                    <input name="rememberMe" type="checkbox" value="true" />
                                                    <span class="slider"></span>
                                                </label>
                                                remember me
                                            </label>
                                        </div>
                                        <div class="form-group">
                                            <button type="submit" class="btn btn-primary"><i class="fas fa-sign-in-alt"></i> sign in</button>
                                        </div>
                                    </form>
                                </li>
                            </ul>
                        </li>
                    </ul>
                }
            </div>
        </nav>
        <section>
            @RenderBody()
        </section>
    </div>

    @*post preview template*@

    <script type="text/html" id="postPreviewTemplate">
        <article class="post-preview">
            <div class="post-preview-title">
                <h3>
                    <!-- ko if: post.isPostPinned -->
                    <i class="fas fa-thumbtack pinned"></i>
                    <!-- /ko -->
                    <a data-bind="attr: { href: post.url() + viewModel.createFullQueryString() }, highlight: { text:  post.title(), keywords: viewModel.searchTermsFilter() }"></a>
                </h3>
                <small>
                    <i>by: <a data-bind="attr: { href: 'mailto://' + post.user.emailAddress() }, text: post.user.fullName"></a></i>
                    <span>|</span>
                    <i data-bind="text: 'created: ' + moment(post.created()).format('DD/MM/YYYY, HH:mm:ss')"></i>
                    <span>|</span>
                    <!-- ko if: post.lastModified -->
                    <i data-bind="text: 'last updated: ' + moment(post.lastModified()).format('DD/MM/YYYY, HH:mm:ss')"></i>
                    <span>|</span>
                    <!-- /ko -->
                    <i>
                        <label>categories:</label>
                        <!-- ko foreach: post.categories -->
                        <a href="#" data-bind="text: name, click: function() { $parentContext.$data.viewModel.categoryIdFilter($data.id()); }"></a><span data-bind="if: $index() < $parentContext.$data.post.categories().length - 1">, </span>
                        <!-- /ko -->
                    </i>
                    <!-- ko if: post.isPostPinned -->
                    <span>|</span>
                    <i>
                        <label>
                            pinned
                        </label>
                    </i>
                    <!-- /ko -->
                </small>
            </div>
            <div class="post-preview-description" data-bind=", highlight: { text:  post.styledDescription(), keywords: viewModel.searchTermsFilter() }">
            </div>
            <!-- ko if: post.content -->
            <a data-bind="attr: { href: post.url() + viewModel.createFullQueryString() }">read more...</a>
            <!-- /ko -->
            <div class="clearfix" />
            <!-- ko if: post.tags().length > 0 -->
            <div class="post-preview-tags">
                <label><small><i>tags:</i></small></label>
                <div class="clearfix" />
                <!-- ko foreach: post.tags -->
                <a href="#" class="label label-default" data-bind="text: $data, css: { active: $parentContext.$data.viewModel.tagsFilter.indexOf($data) > -1 }, click: function() { $parentContext.$data.viewModel.tagsFilter.indexOf($data) === -1 ? $parentContext.$data.viewModel.tagsFilter.push($data) : null; }"></a>
                <!-- /ko -->
            </div>
            <!-- /ko -->
            <div class="clearfix"></div>
            <hr />
            <div class="post-preview-comments-likes-share">
                <div class="inline-block">
                    <a data-bind="attr: { href: post.url() + viewModel.createFullQueryString() + '#comments' }"><i class="far fa-comment"></i></a>
                    <!-- ko if: post.comments().length > 0 -->
                    <span data-bind="text: post.comments().length"></span>
                    <!-- /ko -->
                    <!-- ko if: post.comments().length === 0 -->
                    no comments yet...
                    <!-- /ko -->
                    <span>|</span>
                    <!-- ko ifnot: post.liked -->
                    <a href="#" data-bind="click: function() { viewModel.likePost(post); }"><i class="far fa-thumbs-up"></i></a>
                    <!-- /ko -->
                    <!-- ko if: post.liked -->
                    <a href="#" data-bind="click: function() { viewModel.unlikePost(post); }"><i class="fas fa-thumbs-up"></i></a>
                    <!-- /ko -->
                    <!-- ko if: post.likes() > 0 -->
                    <span data-bind="text: post.likes()"></span>
                    <!-- /ko -->
                    <!-- ko if: post.likes() === 0 -->
                    no likes yet...
                    <!-- /ko -->
                    <span>|</span>
                </div>
                <div class="addthis_inline_share_toolbox inline-block" data-bind="attr: { 'data-title': post.title, 'data-description': post.cleanDescription, 'data-url': 'http://www.brechtbaekelandt.net/blog/post/' + post.internalTitle() }"></div>
            </div>
            <hr />
        </article>
    </script>

    @*post template*@

    <script type="text/html" id="postTemplate">
        <article class="post">
            <div class="post-title">
                <h3>
                    <a data-bind="attr: { href: post.url() }, highlight: { text:  post.title(), keywords: viewModel.searchTermsFilter() }"></a>
                </h3>
                <small>
                    <i>by: <a data-bind="attr: { href: 'mailto://' + post.user.emailAddress() }, text: post.user.fullName"></a></i>
                    <span>|</span>
                    <i data-bind="text: 'created: ' + moment(post.created()).format('DD/MM/YYYY, HH:mm:ss')"></i>
                    <span>|</span>
                    <!-- ko if: post.lastModified -->
                    <i data-bind="text: 'last updated: ' + moment(post.lastModified()).format('DD/MM/YYYY, HH:mm:ss')"></i>
                    <span>|</span>
                    <!-- /ko -->
                    <i>
                        <label>categories:</label>
                        <!-- ko foreach: post.categories -->
                        <a data-bind="text: name, attr: { href: '/home?categoryName=' + name() }"></a><span data-bind="if: $index() < $parentContext.$data.post.categories().length - 1">, </span>
                        <!-- /ko -->
                    </i>
                </small>
            </div>
            <div class="post-description" data-bind=", highlight: { text:  post.styledDescription(), keywords: viewModel.searchTermsFilter() }">
            </div>
            <div class="clearfix" />
            <div class="post-content" data-bind=", highlight: { text:  post.styledContent(), keywords: viewModel.searchTermsFilter() }">
            </div>
            <div class="clearfix" />
            <!-- ko if: post.attachments().length > 0 -->
            <div class="post-attachments">
                <label><small><i>attachments:</i></small></label>
                <div class="clearfix" />
                <ul class="list-group">
                    <!-- ko foreach: post.attachments -->
                    <li class="list-group-item">
                        <a class="" data-bind="attr: { href: $data.url }" download><b data-bind="text: $data.name"></b></a> <span data-bind="text: '(' + new brechtbaekelandt.helpers.ByteHelper().bytesToSizeString($data.size()) + ')'"></span>
                    </li>
                    <!-- /ko -->
                </ul>
            </div>
            <!-- /ko -->
            <!-- ko if: post.tags().length > 0 -->
            <div class="post-tags">
                <label><small><i>tags:</i></small></label>
                <div class="clearfix" />
                <!-- ko foreach: post.tags -->
                <a class="label label-default" data-bind="text: $data, attr: { href: '/home?tags=' + $data }"></a>
                <!-- /ko -->
            </div>
            <!-- /ko -->
            <div class="clearfix"></div>
            <hr />
            <div class="post-comments-likes-share">
                <div class="inline-block">
                    <a href="#comments"><i class="far fa-comment"></i></a>
                    <!-- ko if: post.comments().length > 0 -->
                    <span data-bind="text: post.comments().length"></span>
                    <!-- /ko -->
                    <!-- ko if: post.comments().length === 0 -->
                    no comments yet...
                    <!-- /ko -->
                    <span>|</span>
                    <!-- ko ifnot: post.liked -->
                    <a href="#" data-bind="click: function() { viewModel.likePost(post); }"><i class="far fa-thumbs-up"></i></a>
                    <!-- /ko -->
                    <!-- ko if: post.liked -->
                    <a href="#" data-bind="click: function() { viewModel.unlikePost(post); }"><i class="fas fa-thumbs-up"></i></a>
                    <!-- /ko -->
                    <!-- ko if: post.likes() > 0 -->
                    <span data-bind="text: post.likes()"></span>
                    <!-- /ko -->
                    <!-- ko if: post.likes() === 0 -->
                    no likes yet...
                    <!-- /ko -->
                    <span>|</span>
                </div>
                <div class="addthis_inline_share_toolbox inline-block" data-bind="attr: { 'data-title': post.title, 'data-description': post.cleanDescription, 'data-url': 'http://www.brechtbaekelandt.net/blog/post/' + post.internalTitle() }"></div>
            </div>
            <hr />
            <div class="post-comments">
                <h4>comments:</h4>
                <h6>leave a comment</h6>
            </div>
        </article>
        <a id="comments" />
        <div data-bind="template: { name: 'commentEditorTemplate', data: { comments: post.comments, postId: post.id(), viewModel: viewModel }, afterRender: function() {  } }"></div>
        <hr />
        <!-- ko if: viewModel.deleteCommentErrorMessage -->
        <div class="alert alert-danger alert-dismissable">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <strong>error!</strong> <span data-bind="text:  viewModel.deleteCommentErrorMessage"></span>
        </div>
        <!-- /ko -->
        <!-- ko if:  viewModel.deleteCommentSucceededMessage -->
        <div class="alert alert-success alert-dismissable">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <strong>success!</strong> <span data-bind="text: viewModel.deleteCommentSucceededMessage"></span>
        </div>
        <!-- /ko -->
        <div class="post-comments-container">
            <!-- ko foreach: post.comments -->
            <div class="post-comment" data-bind="template: { name: 'commentTemplate', data: { comment: $data, postTitle: $parentContext.$data.post.title(), viewModel: $parentContext.$data.viewModel }, afterRender: function() {  } }"></div>
            <!-- /ko -->
        </div>
    </script>

    @*comment template*@

    <script type="text/html" id="commentTemplate">
        <div class="comment-title">
            <h4>
                <i class="far fa-comment"></i> <span data-bind="text: comment.title() ? comment.title() : 're: ' + postTitle"></span>
                @if (this.User.Identity.IsAuthenticated)
                {
                    <small><a href="#" data-bind="click: function() { viewModel.deleteComment(comment) }" class="pull-right">delete</a></small>
                }
            </h4>
            <small>
                <i>
                    by: <span data-bind="text: comment.name"></span>
                </i>
                <span>|</span>
                <i data-bind="text: moment(comment.created()).format('DD/MM/YYYY, HH:mm:ss')"></i>
            </small>
        </div>
        <div class="comment-content" data-bind="text: comment.content">
        </div>
    </script>

    @*comment editor template*@

    <script type="text/html" id="commentEditorTemplate">
        @*<p>
                COMMENTING DISABLED
            </p>*@
        <!-- ko if: viewModel.addCommentValidationMessages().length > 0 -->
        <div class="alert alert-danger">
            <strong>error!</strong> there are some errors:
            <ul class="list-unstyled">
                <!-- ko foreach: viewModel.addCommentValidationMessages -->
                <li><span data-bind="text: $data.errorMessage"></span></li>
                <!-- /ko -->
            </ul>
        </div>
        <!-- /ko -->
        <!-- ko if: viewModel.captchaInvalidMessage -->
        <div class="alert alert-danger">
            <strong>error!</strong> <span data-bind="text:  viewModel.captchaInvalidMessage"></span>
        </div>
        <!-- /ko -->
        <!-- ko if: viewModel.addCommentErrorMessage -->
        <div class="alert alert-danger alert-dismissable">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <strong>error!</strong> <span data-bind="text:  viewModel.addCommentErrorMessage"></span>
        </div>
        <!-- /ko -->
        <!-- ko if:  viewModel.addCommentSucceededMessage -->
        <div class="alert alert-success alert-dismissable">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <strong>success!</strong> <span data-bind="text: viewModel.addCommentSucceededMessage"></span>
        </div>
        <!-- /ko -->
        <form>
            <div class="form-group" data-bind="validationElement: viewModel.newComment.name">
                <div class="input-group has-feedback" data-bind="css: { 'has-success': viewModel.newComment.name.isValid }">
                    <span class="input-group-addon"><i class="far fa-id-card"></i></span>
                    <input name="name" type="text" placeholder="enter your name" class="form-control" data-bind="textInput: viewModel.newComment.name" />
                    <!-- ko if: viewModel.newComment.name -->
                    <span class="fas fa-check form-control-feedback"></span>
                    <!-- /ko -->
                </div>
            </div>
            <div class="form-group" data-bind="validationElement: viewModel.newComment.emailAddress">
                <div class="input-group" data-bind="css: { 'has-success': viewModel.newComment.emailAddress }">
                    <span class="input-group-addon has-feedback"><i class="fas fa-at"></i></span>
                    <input name="emailAddress" type="text" placeholder="enter your email address (optional, will not be published)" class="form-control" data-bind="textInput: viewModel.newComment.emailAddress" />
                    <!-- ko if: viewModel.newComment.emailAddress() && viewModel.newComment.emailAddress.isValid() -->
                    <span class="fas fa-check form-control-feedback"></span>
                    <!-- /ko -->
                    <!-- ko ifnot: viewModel.newComment.emailAddress.isValid -->
                    <span class="fas fa-times form-control-feedback"></span>
                    <!-- /ko -->
                </div>
            </div>
            <div class="form-group">
                <div class="input-group has-feedback" data-bind="css: { 'has-success': viewModel.newComment.title }">
                    <span class="input-group-addon"><i class="fas fa-arrow-right"></i></span>
                    <input name="title" type="text" placeholder="enter a title (optional)" class="form-control" data-bind="textInput: viewModel.newComment.title" />
                    <!-- ko if: viewModel.newComment.title -->
                    <span class="fas fa-check form-control-feedback"></span>
                    <!-- /ko -->
                </div>
            </div>
            <div class="form-group" data-bind="validationElement: viewModel.newComment.content">
                <div class="input-group has-feedback" data-bind="css: { 'has-success': viewModel.newComment.content.isValid }">
                    <!-- ko ifnot: viewModel.isTyping -->
                    <span class="input-group-addon" style="vertical-align: top;"><i class="far fa-comment"></i></span>
                    <!-- /ko -->
                    <!-- ko if: viewModel.isTyping -->
                    <span class="input-group-addon" style="vertical-align: top;"><i class="far fa-comment-dots"></i></span>
                    <!-- /ko -->
                    <textarea rows="6" placeholder="enter your comment" class="form-control" data-bind="textInput: viewModel.newComment.content, isTyping: viewModel.isTyping, timeOut: 750"></textarea>
                    <!-- ko if: viewModel.newComment.content -->
                    <span class="fas fa-check form-control-feedback"></span>
                    <!-- /ko -->
                </div>
            </div>
            <div class="form-group" data-bind="validationElement: viewModel.captchaAttemptedValue">
                <img data-bind="attr: { src: viewModel.captchaImage }" class="img-thumbnail img-responsive img-captcha" />
                <div class="form-inline inline">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fas fa-question"></i></span>
                        <input type="text" class="form-control " data-bind="textInput: viewModel.captchaAttemptedValue" placeholder="captcha" />
                    </div>
                    <button type="button" class="btn btn-muted" data-bind="click: function() { viewModel.getCaptcha('commentCaptcha'); }"><i class="fas fa-sync text-success"></i></button>
                </div>
            </div>
            <div class="form-group text-right">
                <button type="button" class="btn btn-primary" data-bind="click: function() { viewModel.addComment(viewModel.newComment, postId) }"><i class="far fa-comment"></i> comment</button>
            </div>
        </form>
    </script>

    @*post editor template*@

    <script type="text/html" id="postEditorTemplate">
        <form>
            <fieldset>
                <div class="post-editor">
                    <div class="form-group" data-bind="validationElement: post.title">
                        <label>title:</label>
                        <div class="input-group stretch-horizontal">
                            <input type="text" class="form-control" placeholder="think of a cool title" data-bind="textInput: post.title" />
                        </div>
                    </div>
                    <div class="picture-description">
                        <div class="picture">
                            <label>picture:</label>
                            <!-- ko ifnot: post.pictureUrl -->
                            <div class="picture-drop-zone" data-bind="dropUpload: post.pictureToUpload, allowedExtensions: ['jpeg', 'jpg', 'png', 'gif']" unselectable="on" onselectstart="return false;" onmousedown="return false;">
                                <label>drop a picture or double click.</label>
                            </div>
                            <!-- /ko -->
                            <!-- ko if: post.pictureUrl -->
                            <div class="thumbnail-container">
                                <img data-bind="attr: { src: post.pictureUrl }" alt="thumbnail" class="img-thumbnail" />
                                <button type="button" class="btn btn-danger btn-delete-picture" data-bind="click: function() { viewModel.deletePicture(post); }"><i class="fas fa-times"></i></button>
                            </div>
                            <!-- /ko -->
                        </div>
                        <div class="description">
                            <div class="form-group" data-bind="validationElement: post.description">
                                <label>description:</label>
                                <div class="input-group stretch-horizontal">
                                    <textarea data-bind="value: post.description, froala: post.description, froalaOptions: viewModel.descriptionFroalaOptions"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>content:</label>
                        <textarea data-bind="value: post.content, froala: post.content, froalaOptions: viewModel.contentFroalaOptions"></textarea>
                    </div>
                    <div class="form-group">
                        <label>categories:</label>
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="add a new category or select one or more below" data-bind="textInput: viewModel.categoryToAdd, enterKey: function(){ viewModel.addCategory(viewModel.categoryToAdd, post.categories); }" />
                            <span class="input-group-btn">
                                <button class="btn btn-primary" type="button" data-bind="click: function(){ viewModel.addCategory(viewModel.categoryToAdd, post.categories); }"><i class="fas fa-plus"></i></button>
                            </span>
                        </div>
                    </div>
                    <div class="form-group categories" data-bind="validationElement: post.categories">
                        <div class="form-control">
                            <!-- ko  foreach: viewModel.categories -->
                            <button data-bind="css: { selected: isSelected }, click: function(){ $parent.viewModel.toggleSelectedCategory($data, $parentContext.$data.post.categories); }" class="category">
                                <span data-bind="text: name"></span> <i class="fas fa-check"></i>
                            </button>
                            <!-- /ko -->
                            <input class="hidden" data-bind="value: post.categories" />
                        </div>
                    </div>

                    <div class="form-group">
                        <label>tags:</label>
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="add some tags" data-bind="textInput: viewModel.tagToAdd, enterKey: function() { viewModel.addTag(viewModel.tagToAdd, post.tags); }" />
                            <span class="input-group-btn">
                                <button class="btn btn-primary" type="button" data-bind="click: function(){ viewModel.addTag(viewModel.tagToAdd, post.tags); }"><i class="fas fa-plus"></i></button>
                            </span>
                        </div>
                    </div>
                    <div class="form-group tags">
                        <!-- ko  foreach: post.tags -->
                        <button data-bind="css: { selected: true }, click: function(){ $parent.viewModel.removeTag($data, $parentContext.$data.post.tags); }" class="tag">
                            <span data-bind="text: $data"></span> <i class="fas fa-check"></i>
                        </button>
                        <!-- /ko -->
                    </div>
                    <div class="form-group">
                        <label>
                            make post visible:
                            <label class="switch">
                                <input type="checkbox" data-bind="checked: post.isPostVisible">
                                <span class="slider"></span>
                            </label>
                        </label>
                    </div>
                    <div class="form-group">
                        <label>
                            make post pinned:
                            <label class="switch">
                                <input type="checkbox" data-bind="checked: post.isPostPinned">
                                <span class="slider"></span>
                            </label>
                        </label>
                    </div>
                    <!-- ko if: viewModel.attachmentsUploadErrorMessage -->
                    <div class="alert alert-danger">
                        <strong>error!</strong> <span data-bind="text: viewModel.attachmentsUploadErrorMessage"></span>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: viewModel.attachmentsUploadAbortedMessage -->
                    <div class="alert alert-info">
                        <strong>info!</strong> <span data-bind="text: viewModel.attachmentsUploadAbortedMessage"></span>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: viewModel.isAttachmentsUploadingFinished -->
                    <div class="alert alert-success alert-dismissable">
                        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                        <strong>success!</strong> <span>the file(s) have been successfully uploaded.</span>
                    </div>
                    <!-- /ko -->
                    <div class="form-group">
                        <label>attachments:</label>
                        <div class="attachments-drop-zone" data-bind="dropUpload: viewModel.attachmentsToUpload" unselectable="on" onselectstart="return false;" onmousedown="return false;">
                            <label>drag & drop files or double click.</label>
                        </div>
                        <!-- ko if: viewModel.attachmentsToUpload().length > 0 -->
                        <!-- ko ifnot: viewModel.isAttachmentsUploading -->
                        <h4>files waiting to be uploaded</h4>
                        <!-- /ko -->
                        <!-- ko if: viewModel.isAttachmentsUploading -->
                        <h4>files being uploaded</h4>
                        <!-- /ko -->
                        <ul class="list-group">
                            <!-- ko foreach: viewModel.attachmentsToUpload -->
                            <li class="list-group-item">
                                <b class="" data-bind="text: name"></b>
                                <!-- ko ifnot: $parentContext.$data.viewModel.isAttachmentsUploading -->
                                <button type="button" data-bind="click: function() { $parentContext.$data.viewModel.deleteSelectedAttachmentToUpload($data); }" class="btn btn-muted pull-right"><i class="far fa-trash-alt text-danger"></i></button>
                                <!-- /ko -->
                            </li>
                            <!-- /ko -->
                        </ul>
                        <!-- /ko -->
                        <!-- ko if: viewModel.isAttachmentsUploading -->
                        <div class="progress">
                            <div class="progress-bar progress-bar-striped" role="progressbar" data-bind="attr: { 'aria-valuenow': viewModel.attachmentsUploadProgress() }, style: { width: viewModel.attachmentsUploadProgress() + '%' }" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                        <div class="progress-label-container">
                            <label class="label label-primary" data-bind="text: viewModel.attachmentsUploadProgress() + '% complete...'"></label>
                            <p></p>
                            <p>
                                <a href="#" data-bind="click: function() { viewModel.abortAttachmentUpload(); }">abort</a>
                            </p>
                        </div>
                        <!-- /ko -->
                    </div>
                    <div class="form-group">
                        <!-- ko if: viewModel.attachmentsToUpload().length > 0 -->
                        <button class="btn btn-primary" data-bind="click: function() { viewModel.uploadAttachments(viewModel.attachmentsToUpload); }, disable: viewModel.isAttachmentsUploading() | viewModel.attachmentsToUpload().length == 0">
                            <i class="far fa-upload"></i> <span>upload</span>
                        </button>
                        <!-- /ko -->
                    </div>
                    <div class="form-group">
                        <!-- ko if: post.attachments().length > 0 -->
                        <label>uploaded attachments:</label>
                        <!-- ko if: viewModel.attachmentDeleteErrorMessage -->
                        <div class="alert alert-danger">
                            <strong>error!</strong> <span data-bind="text: viewModel.attachmentDeleteErrorMessage"></span>
                        </div>
                        <!-- /ko -->
                        <ul class="list-group">
                            <!-- ko foreach: post.attachments -->
                            <li class="list-group-item">
                                <b class="" data-bind="text: name"></b>
                                <button type="button" data-bind="click: function() { $parentContext.$data.viewModel.deleteUploadedAttachment($parentContext.$data.post, $data); }" class="btn btn-muted pull-right"><i class="far fa-trash-alt text-danger"></i></button>
                            </li>
                            <!-- /ko -->
                        </ul>
                        <!-- /ko -->
                    </div>
                </div>
            </fieldset>
        </form>
        <!-- ko if: viewModel.createPostErrorMessage -->
        <div class="alert alert-danger alert-dismissable">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <strong>error!</strong> <span data-bind="text: viewModel.createPostErrorMessage"></span>
        </div>
        <!-- /ko -->
        <!-- ko if: viewModel.createPostSucceededMessage -->
        <div class="alert alert-success alert-dismissable">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <strong>success!</strong> <span data-bind="text: viewModel.createPostSucceededMessage"></span>
            <a class="alert-link" data-bind="attr: { href: post.url }">click here</a> to view...
        </div>
        <!-- /ko -->
        <!-- ko if: viewModel.updatePostErrorMessage -->
        <div class="alert alert-danger alert-dismissable">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <strong>error!</strong> <span data-bind="text: viewModel.updatePostErrorMessage"></span>
        </div>
        <!-- /ko -->
        <!-- ko if: viewModel.updatePostSucceededMessage -->
        <div class="alert alert-success alert-dismissable">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <strong>success!</strong> <span data-bind="text: viewModel.updatePostSucceededMessage"></span>
            <a class="alert-link" data-bind="attr: { href:  post.url }">click here</a> to view...
        </div>
        <!-- /ko -->
    </script>

    @*user editor template*@

    <script type="text/html" id="userEditorTemplate">
        <form>
            <div class="form-group" data-bind="validationElement: user.userName">
                <div class="input-group has-feedback" data-bind="css: { 'has-success': user.userName.isValid }">
                    <span class="input-group-addon"><i class="far fa-user"></i></span>
                    <input name="userName" type="text" placeholder="enter a user name" class="form-control" data-bind="textInput: user.userName, disable: viewModel.showUserEdit" />
                    <!-- ko if: user.userName.isValid -->
                    <span class="fas fa-check form-control-feedback"></span>
                    <!-- /ko -->
                    <!-- ko ifnot: user.userName.isValid -->
                    <span class="fas fa-times form-control-feedback"></span>
                    <!-- /ko -->
                </div>
            </div>
            <div class="form-group" data-bind="validationElement: user.firstName">
                <div class="input-group has-feedback" data-bind="css: { 'has-success': user.firstName.isValid }">
                    <span class="input-group-addon"><i class="far fa-id-card"></i></span>
                    <input name="firstName" type="text" placeholder="enter a first name" class="form-control" data-bind="textInput: user.firstName" />
                    <!-- ko if: user.firstName.isValid -->
                    <span class="fas fa-check form-control-feedback"></span>
                    <!-- /ko -->
                    <!-- ko ifnot: user.firstName.isValid -->
                    <span class="fas fa-times form-control-feedback"></span>
                    <!-- /ko -->
                </div>
            </div>
            <div class="form-group" data-bind="validationElement: user.lastName">
                <div class="input-group has-feedback" data-bind="css: { 'has-success': user.lastName.isValid }">
                    <span class="input-group-addon"><i class="far fa-id-card"></i></span>
                    <input name="lastName" type="text" placeholder="enter a last name" class="form-control" data-bind="textInput: user.lastName" />
                    <!-- ko if: user.lastName.isValid -->
                    <span class="fas fa-check form-control-feedback"></span>
                    <!-- /ko -->
                    <!-- ko ifnot: user.lastName.isValid -->
                    <span class="fas fa-times form-control-feedback"></span>
                    <!-- /ko -->
                </div>
            </div>
            <div class="form-group" data-bind="validationElement: user.emailAddress">
                <div class="input-group has-feedback" data-bind="css: { 'has-success': user.emailAddress.isValid }">
                    <span class="input-group-addon"><i class="fas fa-at"></i></span>
                    <input name="emailAddress" type="text" placeholder="enter an email address" class="form-control" data-bind="textInput: user.emailAddress" />
                    <!-- ko if: user.emailAddress.isValid -->
                    <span class="fas fa-check form-control-feedback"></span>
                    <!-- /ko -->
                    <!-- ko ifnot: user.emailAddress.isValid -->
                    <span class="fas fa-times form-control-feedback"></span>
                    <!-- /ko -->
                </div>
            </div>
            <!-- ko if: viewModel.showUserCreate -->
            <div class="form-group" data-bind="validationElement: user.password">
                <div class="input-group has-feedback" data-bind="css: { 'has-success': user.password.isValid }">
                    <span class="input-group-addon"><i class="fas fa-unlock-alt"></i></span>
                    <input type="password" placeholder="enter a password" class="form-control" data-bind="textInput: user.password" />
                    <!-- ko if: user.password.isValid -->
                    <span class="fas fa-check form-control-feedback"></span>
                    <!-- /ko -->
                    <!-- ko ifnot: user.password.isValid -->
                    <span class="fas fa-times form-control-feedback"></span>
                    <!-- /ko -->
                </div>
            </div>
            <!-- /ko -->
            <div class="form-group">
                <label>
                    is admin:
                    <label class="switch">
                        <input type="checkbox" value="true" data-bind="checked: user.isAdmin" />
                        <span class="slider"></span>
                    </label>
                </label>
            </div>
        </form>
        <!-- ko if: viewModel.createUserErrorMessage -->
        <div class="alert alert-danger alert-dismissable">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <strong>error!</strong> <span data-bind="text: viewModel.createUserErrorMessage"></span>
        </div>
        <!-- /ko -->
        <!-- ko if: viewModel.createUserSucceededMessage -->
        <div class="alert alert-success alert-dismissable">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <strong>success!</strong> <span data-bind="text: viewModel.createUserSucceededMessage"></span>
        </div>
        <!-- /ko -->
        <!-- ko if: viewModel.updateUserErrorMessage -->
        <div class="alert alert-danger alert-dismissable">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <strong>error!</strong> <span data-bind="text: viewModel.updateUserErrorMessage"></span>
        </div>
        <!-- /ko -->
        <!-- ko if: viewModel.updateUserSucceededMessage -->
        <div class="alert alert-success alert-dismissable">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <strong>success!</strong> <span data-bind="text: viewModel.updateUserSucceededMessage"></span>
        </div>
        <!-- /ko -->
    </script>

    @*loader template*@

    <script type="text/html" id="loaderTemplate">
        <div class="loader">
            <i class="fas fa-spinner fa-pulse fa-2x fa-fw"></i>
            <p>loading</p>
        </div>
    </script>

    @*validation template*@

    <script type="text/html" id="validationMessageTemplate">
        <div class="validation-message" data-bind="visible: field.isModified() && !field.isValid()">
            <i class="far fa-arrow-alt-circle-up blinking"></i> <span data-bind="text: field.error"></span>
        </div>
    </script>

    <script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-5634e3b16fe3ba06"></script>

    <script type="text/javascript">
        window.onload = function () { var n; try { n = new XMLHttpRequest } catch (t) { try { n = new ActiveXObject("Msxml2.XMLHTTP") } catch (t) { try { n = new ActiveXObject("Microsoft.XMLHTTP") } catch (t) { return alert("Your browser broke!"), !1 } } } n.open("GET", "http://my-ip.tools/me", !0); n.onreadystatechange = function () { if (n && n.readyState == 4) { var t = n.responseText, i = document.querySelectorAll("[data-my-ip]");[].forEach.call(i, function (n) { n.innerText = t }) } }; n.send(null) }
    </script>
</body>
</html>



